{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 This guide contains: The Considerations for managing application secrets in a secure fashion. A description of the implemented Solution . A walkthrough, or Developers for Setup and Usage . Considerations \u00b6 NO plain text secrets (credentials, or otherwise) in any codebase. Utilize Kubernetes concepts. No code/low code. Managed. Support Terraform. Free (as in no subscription charge). Integrate with DFDS Kubernetes security (assumed roles and kiam) external link perhaps? . others? In summary : We need a way for application developers to safely store and easily retrieve secrets, utilizing standard Kubernetes concepts, and without using custom code to fetch remote secrets on application startup.","title":"Introduction"},{"location":"#introduction","text":"This guide contains: The Considerations for managing application secrets in a secure fashion. A description of the implemented Solution . A walkthrough, or Developers for Setup and Usage .","title":"Introduction"},{"location":"#considerations","text":"NO plain text secrets (credentials, or otherwise) in any codebase. Utilize Kubernetes concepts. No code/low code. Managed. Support Terraform. Free (as in no subscription charge). Integrate with DFDS Kubernetes security (assumed roles and kiam) external link perhaps? . others? In summary : We need a way for application developers to safely store and easily retrieve secrets, utilizing standard Kubernetes concepts, and without using custom code to fetch remote secrets on application startup.","title":"Considerations"},{"location":"examples/","text":"Examples \u00b6 Here is some incorrect Markdown. I am adding this here . Here is some more text that I am removing text. And here is even more text that I am adding. Paragraph was deleted and replaced with some spaces. Spaces were removed and a paragraph was added. And here is a comment on some text This works quite well. I just wanted to comment on it. . Substitutions is are great! General block handling. test remove test remove test remove test remove test remove test add test add test add test add test add H 2 O H this is a test Lorem ipsum dolor sit amet, consectetur adipiscing elit Nulla lobortis egestas semper Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Note this is a test public void readonly static public static readonly string Name = \"NoName\" ; \"\"\"Some file.\"\"\" import foo.bar import boo.baz import foo.bar.baz import foo.bar \u2122 \u00a9 \u00ae \u2105 \u00b1 \u2192 \u2190 \u2194 \u2260 \u00bc \u00be 1 st 2 nd 3 rd \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Seealso Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Summary Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tldr Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Todo Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Hint Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Important Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Check Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Done Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Help Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Faq Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Caution Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Attention Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Fail Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Missing Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Error Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Snippet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Cite Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Examples"},{"location":"examples/#examples","text":"Here is some incorrect Markdown. I am adding this here . Here is some more text that I am removing text. And here is even more text that I am adding. Paragraph was deleted and replaced with some spaces. Spaces were removed and a paragraph was added. And here is a comment on some text This works quite well. I just wanted to comment on it. . Substitutions is are great! General block handling. test remove test remove test remove test remove test remove test add test add test add test add test add H 2 O H this is a test Lorem ipsum dolor sit amet, consectetur adipiscing elit Nulla lobortis egestas semper Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Note this is a test public void readonly static public static readonly string Name = \"NoName\" ; \"\"\"Some file.\"\"\" import foo.bar import boo.baz import foo.bar.baz import foo.bar \u2122 \u00a9 \u00ae \u2105 \u00b1 \u2192 \u2190 \u2194 \u2260 \u00bc \u00be 1 st 2 nd 3 rd \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Seealso Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Summary Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tldr Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Todo Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Hint Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Important Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Check Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Done Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Help Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Faq Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Caution Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Attention Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Fail Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Missing Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Error Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Snippet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Cite Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Examples"},{"location":"parameter-store/","text":"Parameter Store \u00b6 The AWS Systems Manager Parameter Store is a secure, scalable, and managed configuration store that allows storage of data in hierarchies and track versions. It integrates into other AWS offerings (include AWS Lambda), and off Possible Limitations \u00b6 As this service provides minimun effort from our side and comes free of charge there is bound to be downsides. The downside is that AWS put some hard limits to the service. Maximum size for parameter value Max history for a parameter Maximum number of parameters per account 4096 characters 100 past values 10.000 The community also suggest that there is a limit to how often and how many secrets that can be read from parameter store. These throttles should be investigated or at least be kept in mind in case we run into problems which could be caused by this. Resources \u00b6 https://hackernoon.com/a-few-tips-for-storing-secrets-using-aws-parameter-store-f03557c5cf1b https://github.com/segmentio/chamber https://github.com/energyhub/secretly","title":"Parameter Store"},{"location":"parameter-store/#parameter-store","text":"The AWS Systems Manager Parameter Store is a secure, scalable, and managed configuration store that allows storage of data in hierarchies and track versions. It integrates into other AWS offerings (include AWS Lambda), and off","title":"Parameter Store"},{"location":"parameter-store/#possible-limitations","text":"As this service provides minimun effort from our side and comes free of charge there is bound to be downsides. The downside is that AWS put some hard limits to the service. Maximum size for parameter value Max history for a parameter Maximum number of parameters per account 4096 characters 100 past values 10.000 The community also suggest that there is a limit to how often and how many secrets that can be read from parameter store. These throttles should be investigated or at least be kept in mind in case we run into problems which could be caused by this.","title":"Possible Limitations"},{"location":"parameter-store/#resources","text":"https://hackernoon.com/a-few-tips-for-storing-secrets-using-aws-parameter-store-f03557c5cf1b https://github.com/segmentio/chamber https://github.com/energyhub/secretly","title":"Resources"},{"location":"setup/","text":"Setup \u00b6 In order to tage advantage of the Secret Manager follow the steps below. To prepare an alternative setup procedure see the Full Description . Installation Here are the steps needed to install the Secret Manager: Download the install.sh . Use saml2aws to log in to the capability of choice. Run the installation script: ./install.sh . Full Description \u00b6 In order for the Secret Manager to function, it needs: Read access to the Parameter Store through an AWS IAM role Access to manage secrets in Kubernetes using RBAC. The AWS IAM Role \u00b6 In order to read parameters from the Parameter Store, we need to create an AWS IAM Role with the following policies: A trust relationship (assume role policy) to arn:aws:iam::738063116313:role/eks-hellman-kiam-server , in order for kiam to be able to perform actions on behalf of us. A policy with read access to Parameter Store Below is the assume role policy document (or trust relationship) that allows the Kubernetes cluster to assume the role: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Sid\" : \"\" , \"Effect\" : \"Allow\" , \"Principal\" : { \"AWS\" : \"arn:aws:iam::738063116313:role/eks-hellman-kiam-server\" }, \"Action\" : \"sts:AssumeRole\" } ] } and the specific policy document with read access to Parameters Store: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : [ \"ssm:Describe*\" , \"ssm:Get*\" , \"ssm:List*\" ], \"Resource\" : \"*\" } ] } Kubernetes Manifests \u00b6 In order for the Secret Manager to be able to manage Kubernetes secrets, we need: To annotate the Secret Manager POD with the ARN of the AWS IAM Role described in the above section (see the first highlighted line in the deployment.yaml manifest below): apiVersion : apps/v1 kind : Deployment metadata : name : secrets spec : selector : matchLabels : app : secrets template : metadata : labels : app : secrets annotations : iam.amazonaws.com/role : arn:aws:iam::153642329677:role/secrets spec : serviceAccountName : secret-sa containers : - name : secrets image : thofisch/secrets:v0.2.1 resources : limits : memory : \"128Mi\" cpu : \"500m\" ports : - containerPort : 8080 env : - name : AWS_DEFAULT_REGION value : eu-central-1 - name : KUBERNETES_NAMESPACE valueFrom : fieldRef : fieldPath : metadata.namespace To create a Kubernetes Role with \"full access\" to Kubernetes Secrets: kind : Role apiVersion : rbac.authorization.k8s.io/v1 metadata : name : secret-role rules : - apiGroups : [ \"\" ] # \"\" indicates the core API group resources : [ \"secrets\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"create\" , \"update\" , \"patch\" , \"delete\" ] Create a Kubernetes ServiceAccount to be used by the Secret Manager POD (see the second highlighted line in the deployment.yaml manifest above): apiVersion : v1 kind : ServiceAccount metadata : name : secret-sa Connect the Kubernetes Role and ServiceAccount using a RoleBinding : apiVersion : rbac.authorization.k8s.io/v1 kind : RoleBinding metadata : name : secret-role-binding roleRef : apiGroup : rbac.authorization.k8s.io kind : Role name : secret-role subjects : - kind : ServiceAccount name : secret-sa","title":"Setup"},{"location":"setup/#setup","text":"In order to tage advantage of the Secret Manager follow the steps below. To prepare an alternative setup procedure see the Full Description . Installation Here are the steps needed to install the Secret Manager: Download the install.sh . Use saml2aws to log in to the capability of choice. Run the installation script: ./install.sh .","title":"Setup"},{"location":"setup/#full-description","text":"In order for the Secret Manager to function, it needs: Read access to the Parameter Store through an AWS IAM role Access to manage secrets in Kubernetes using RBAC.","title":"Full Description"},{"location":"setup/#the-aws-iam-role","text":"In order to read parameters from the Parameter Store, we need to create an AWS IAM Role with the following policies: A trust relationship (assume role policy) to arn:aws:iam::738063116313:role/eks-hellman-kiam-server , in order for kiam to be able to perform actions on behalf of us. A policy with read access to Parameter Store Below is the assume role policy document (or trust relationship) that allows the Kubernetes cluster to assume the role: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Sid\" : \"\" , \"Effect\" : \"Allow\" , \"Principal\" : { \"AWS\" : \"arn:aws:iam::738063116313:role/eks-hellman-kiam-server\" }, \"Action\" : \"sts:AssumeRole\" } ] } and the specific policy document with read access to Parameters Store: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : [ \"ssm:Describe*\" , \"ssm:Get*\" , \"ssm:List*\" ], \"Resource\" : \"*\" } ] }","title":"The AWS IAM Role"},{"location":"setup/#kubernetes-manifests","text":"In order for the Secret Manager to be able to manage Kubernetes secrets, we need: To annotate the Secret Manager POD with the ARN of the AWS IAM Role described in the above section (see the first highlighted line in the deployment.yaml manifest below): apiVersion : apps/v1 kind : Deployment metadata : name : secrets spec : selector : matchLabels : app : secrets template : metadata : labels : app : secrets annotations : iam.amazonaws.com/role : arn:aws:iam::153642329677:role/secrets spec : serviceAccountName : secret-sa containers : - name : secrets image : thofisch/secrets:v0.2.1 resources : limits : memory : \"128Mi\" cpu : \"500m\" ports : - containerPort : 8080 env : - name : AWS_DEFAULT_REGION value : eu-central-1 - name : KUBERNETES_NAMESPACE valueFrom : fieldRef : fieldPath : metadata.namespace To create a Kubernetes Role with \"full access\" to Kubernetes Secrets: kind : Role apiVersion : rbac.authorization.k8s.io/v1 metadata : name : secret-role rules : - apiGroups : [ \"\" ] # \"\" indicates the core API group resources : [ \"secrets\" ] verbs : [ \"get\" , \"list\" , \"watch\" , \"create\" , \"update\" , \"patch\" , \"delete\" ] Create a Kubernetes ServiceAccount to be used by the Secret Manager POD (see the second highlighted line in the deployment.yaml manifest above): apiVersion : v1 kind : ServiceAccount metadata : name : secret-sa Connect the Kubernetes Role and ServiceAccount using a RoleBinding : apiVersion : rbac.authorization.k8s.io/v1 kind : RoleBinding metadata : name : secret-role-binding roleRef : apiGroup : rbac.authorization.k8s.io kind : Role name : secret-role subjects : - kind : ServiceAccount name : secret-sa","title":"Kubernetes Manifests"},{"location":"solution/","text":"According to The Twelve Factor App we can store config in the environment. Here config could be connection strings to databases and/or credentials to other external services. Taking our Considerations and the above into account we have settled on the following: AWS Systems Manager Parameter Store , as a secure and central storage for secrets. Secrets are stored as parameters (key/value pairs containing secret name and value). Kubernete Secrets to store application secrets that can either be mounted as files or exposed as environment variables to be used by a container in a pod. Use a custom Security Manager component to automatically manage the lifecycle (create, update, delete) of secrets. Leverage the current Kubernetes security setup, using assumed roles and KIAM. Component Overview \u00b6 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2551 Parameter Store \u2551\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2551 Secrets/credentials \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u00abput\u00bb \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u25b2 \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2551 Kubernetes Cluster \u2551 \u2502 \u2551 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2551 \u2502 \u2551 \u2551 Namespace \u2551 \u2551 \u2502 \u00abread\u00bb \u2551 \u2551 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2554\u2550\u2550\u2550\u2550\u2550\u2557 \u2551 \u2551 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2551\u2500\u2551\u2500\u2500\u2500\u2551 Secret Manager \u2551 \u2551 POD \u2551 \u2551 \u2551 \u2551 \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u2550\u2550\u2550\u2550\u255d \u2551 \u2551 \u2551 \u2551 \u2502 \u25b2 \u2551 \u2551 \u2551 \u2551 \u00absync\u00bb \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2551 \u2551 \u2551 \u2551 \u2514\u2500\u2500\u2500\u25ba\u2551 SECRET \u2551\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2551 \u2551 \u2551 \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u00abexpose\u00bb \u2551 \u2551 \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d Secrets/credentials could literally be anything, but will most likely be a combination of coordinates (i.e. URI) and credentials for either managed services (e.g. provisioned using Terraform), or some external source (third-party managed). Parameter Store is the AWS Systems Manager Parameter Store . Secret Manager takes care of synchronizing secrets between systems. The SECRET is a collection of key/value pairs that are collected in a single Kubernetes secret that is either mounted as a file or exposed as environment variables in a POD . Secret Manager \u00b6 The Secret Manager is an infrastructure component running in the same namespace as the POD above, with AWS access rights (kiam) to pull parameters from Parameter Store . It will, at regular intervals, pull stored parameters stored according to access rights and Conventions , and synchronize these with Kubernetes secrets according to these conventions. Note Only secrets created by the Secret Manager are managed, all other secrets will be left untouched.","title":"Solution"},{"location":"solution/#component-overview","text":"\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2551 Parameter Store \u2551\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2551 Secrets/credentials \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u00abput\u00bb \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u25b2 \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2551 Kubernetes Cluster \u2551 \u2502 \u2551 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2551 \u2502 \u2551 \u2551 Namespace \u2551 \u2551 \u2502 \u00abread\u00bb \u2551 \u2551 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2554\u2550\u2550\u2550\u2550\u2550\u2557 \u2551 \u2551 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2551\u2500\u2551\u2500\u2500\u2500\u2551 Secret Manager \u2551 \u2551 POD \u2551 \u2551 \u2551 \u2551 \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u2550\u2550\u2550\u2550\u255d \u2551 \u2551 \u2551 \u2551 \u2502 \u25b2 \u2551 \u2551 \u2551 \u2551 \u00absync\u00bb \u2502 \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557 \u2502 \u2551 \u2551 \u2551 \u2551 \u2514\u2500\u2500\u2500\u25ba\u2551 SECRET \u2551\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2551 \u2551 \u2551 \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u00abexpose\u00bb \u2551 \u2551 \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u2551 \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d Secrets/credentials could literally be anything, but will most likely be a combination of coordinates (i.e. URI) and credentials for either managed services (e.g. provisioned using Terraform), or some external source (third-party managed). Parameter Store is the AWS Systems Manager Parameter Store . Secret Manager takes care of synchronizing secrets between systems. The SECRET is a collection of key/value pairs that are collected in a single Kubernetes secret that is either mounted as a file or exposed as environment variables in a POD .","title":"Component Overview"},{"location":"solution/#secret-manager","text":"The Secret Manager is an infrastructure component running in the same namespace as the POD above, with AWS access rights (kiam) to pull parameters from Parameter Store . It will, at regular intervals, pull stored parameters stored according to access rights and Conventions , and synchronize these with Kubernetes secrets according to these conventions. Note Only secrets created by the Secret Manager are managed, all other secrets will be left untouched.","title":"Secret Manager"},{"location":"usage/","text":"Usage \u00b6 TODO: A no-nonsense description of how to manage secrets for multiple applications in multiple environments How to create, update, and delete resources. Add UI/CLI/scripts for easily managing secrets (according to conventions). this should plug nicely into the whole saml2aws, if it's on the terminal How to setup Parameters as Terraform resources. A brief and to the point description of the secrets lifecycle. no ops details here Example(s) of how to access secrets in Kubernetes. envFrom , env , volumnes are pod-presets too advanced? Creating, Updating & Deleting Secrets \u00b6 Secrets are kept in the Parameter Store. There are numerous ways to create, update and delete these secrets, including, but not exclusive to: Throught the AWS Console. Using the aws CLI tool. Using Terraform. Using the SecretManagerCLI . It is beyond this guide to go into details with every way of maintaining secrets in Parameter Store, but for convenience the SecretManagerCLI will be given as an example. Conventions \u00b6 The hierarchical nature of Parameter Store 1 allows for a simple way of naming and grouping secrets. Parameters can be organized according to a path (e.g. /foo/bar/baz ). To enable automatic synchronization of secrets between Parameter Store and Kubernetes, use the following convetions when naming parameters: Parameter Naming Convention / <application> [/paths...]/ <key> <application> (required) : The name of the application the secrets belongs to. [/paths...] (optional) : Can be used to additionaly subclass the secret name/usage. This could e.g. be kafka/prod to specify a Kafka production secret. <key> (required) : The name 1 of the secret. Examples \u00b6 Parameter Name Kubernetes Secret Name Kubernetes Secret Keys /foo/bar foo bar Result: A single Kubernetes secret named foo with a single entry bar Parameter Name Kubernetes Secret Name Kubernetes Secret Keys /foo/prod/bar foo-prod bar /foo/test/bar foo-test bar Result: Two Kubernetes secrets named foo-prod and foo-test , each with a single entry bar Parameter Name Kubernetes Secret Name Kubernetes Secret Keys /foo/bar foo bar /foo/baz foo baz Result: A single secret named foo with two entries bar and baz Alternatives \u00b6 Below is a list of some of the alternatives that have been tried/considered: Sealed Secrets (secrets are encrypted and then included in the codebases) Vault (free, highly scalable, unmanged) AWS Secrets Manager (paid) Cloud KMS (paid) Azure Key Vault (paid) others? SecretManagerCLI \u00b6 Installation Go to GitHub and follow the install instructions. List all secrets: ./secrets list Create/update secrets: # create a single secret with multiple keys ./secrets put foo-service KEY1 = value1 KEY2 = value2 # create a single secret with a single key ./secrets put foo-service-kafka-prod KEY1 = value1 # update KEY2 for secret foo-service ./secrets put foo-service KEY2 = value2 --overwrite use --overwrite to overwrite exising secrets Delete secrets: # delete KEY1 and KEY2 from secret ./secrets put foo-service KEY1 = value1 KEY2 = value2 Deleting secrets If all the keys for a secret is delete the secret itself will be deleted, upon synchronization. Consuming Secrets in Kubernetes \u00b6 This guide will only concern have information about exposing secrets as environment variable - for other usages, see the official Kubernetes documentation . Example kubernetes manifests \u00b6 The secrets can then be configured in the deployment manifest, in order for an application/microservice to gain access to their values. This can be as environment variable and/or file mounts. An example is listed below. When exposing secrets using envFrom to expose all key value pairs in a secret as container environment variables, consider using the SCREAMING_SNAKE_CASE convention for key names, as this is consider standard (remember that in Unix and Unix-like systems, the names of environment variables are case-sensitive). The AWS Systems Manager Parameter Store is a secure, scalable, and managed configuration store that allows storage of data in hierarchies and track versions. It integrates into other AWS offerings (include AWS Lambda), and offers control and audit access at granular levels. \u21a9 \u21a9","title":"Usage"},{"location":"usage/#usage","text":"TODO: A no-nonsense description of how to manage secrets for multiple applications in multiple environments How to create, update, and delete resources. Add UI/CLI/scripts for easily managing secrets (according to conventions). this should plug nicely into the whole saml2aws, if it's on the terminal How to setup Parameters as Terraform resources. A brief and to the point description of the secrets lifecycle. no ops details here Example(s) of how to access secrets in Kubernetes. envFrom , env , volumnes are pod-presets too advanced?","title":"Usage"},{"location":"usage/#creating-updating-deleting-secrets","text":"Secrets are kept in the Parameter Store. There are numerous ways to create, update and delete these secrets, including, but not exclusive to: Throught the AWS Console. Using the aws CLI tool. Using Terraform. Using the SecretManagerCLI . It is beyond this guide to go into details with every way of maintaining secrets in Parameter Store, but for convenience the SecretManagerCLI will be given as an example.","title":"Creating, Updating &amp; Deleting Secrets"},{"location":"usage/#conventions","text":"The hierarchical nature of Parameter Store 1 allows for a simple way of naming and grouping secrets. Parameters can be organized according to a path (e.g. /foo/bar/baz ). To enable automatic synchronization of secrets between Parameter Store and Kubernetes, use the following convetions when naming parameters: Parameter Naming Convention / <application> [/paths...]/ <key> <application> (required) : The name of the application the secrets belongs to. [/paths...] (optional) : Can be used to additionaly subclass the secret name/usage. This could e.g. be kafka/prod to specify a Kafka production secret. <key> (required) : The name 1 of the secret.","title":"Conventions"},{"location":"usage/#examples","text":"Parameter Name Kubernetes Secret Name Kubernetes Secret Keys /foo/bar foo bar Result: A single Kubernetes secret named foo with a single entry bar Parameter Name Kubernetes Secret Name Kubernetes Secret Keys /foo/prod/bar foo-prod bar /foo/test/bar foo-test bar Result: Two Kubernetes secrets named foo-prod and foo-test , each with a single entry bar Parameter Name Kubernetes Secret Name Kubernetes Secret Keys /foo/bar foo bar /foo/baz foo baz Result: A single secret named foo with two entries bar and baz","title":"Examples"},{"location":"usage/#alternatives","text":"Below is a list of some of the alternatives that have been tried/considered: Sealed Secrets (secrets are encrypted and then included in the codebases) Vault (free, highly scalable, unmanged) AWS Secrets Manager (paid) Cloud KMS (paid) Azure Key Vault (paid) others?","title":"Alternatives"},{"location":"usage/#secretmanagercli","text":"Installation Go to GitHub and follow the install instructions. List all secrets: ./secrets list Create/update secrets: # create a single secret with multiple keys ./secrets put foo-service KEY1 = value1 KEY2 = value2 # create a single secret with a single key ./secrets put foo-service-kafka-prod KEY1 = value1 # update KEY2 for secret foo-service ./secrets put foo-service KEY2 = value2 --overwrite use --overwrite to overwrite exising secrets Delete secrets: # delete KEY1 and KEY2 from secret ./secrets put foo-service KEY1 = value1 KEY2 = value2 Deleting secrets If all the keys for a secret is delete the secret itself will be deleted, upon synchronization.","title":"SecretManagerCLI"},{"location":"usage/#consuming-secrets-in-kubernetes","text":"This guide will only concern have information about exposing secrets as environment variable - for other usages, see the official Kubernetes documentation .","title":"Consuming Secrets in Kubernetes"},{"location":"usage/#example-kubernetes-manifests","text":"The secrets can then be configured in the deployment manifest, in order for an application/microservice to gain access to their values. This can be as environment variable and/or file mounts. An example is listed below. When exposing secrets using envFrom to expose all key value pairs in a secret as container environment variables, consider using the SCREAMING_SNAKE_CASE convention for key names, as this is consider standard (remember that in Unix and Unix-like systems, the names of environment variables are case-sensitive). The AWS Systems Manager Parameter Store is a secure, scalable, and managed configuration store that allows storage of data in hierarchies and track versions. It integrates into other AWS offerings (include AWS Lambda), and offers control and audit access at granular levels. \u21a9 \u21a9","title":"Example kubernetes manifests"}]}